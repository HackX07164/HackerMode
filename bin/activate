#!/usr/bin/bash
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

function exit() {
  # reset old environment variables
  if [ -n "${_OLD_VIRTUAL_PATH:-}" ]; then
    PATH="${_OLD_VIRTUAL_PATH:-}"
    export PATH
    unset _OLD_VIRTUAL_PATH
  fi
  if [ -n "${_OLD_VIRTUAL_PYTHONHOME:-}" ]; then
    PYTHONHOME="${_OLD_VIRTUAL_PYTHONHOME:-}"
    export PYTHONHOME
    unset _OLD_VIRTUAL_PYTHONHOME
  fi

  # This should detect bash and zsh, which have a hash command that must
  # be called to get it to forget past commands.  Without forgetting
  # past commands the $PATH changes we made may not be respected
  if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}" ]; then
    hash -r 2>/dev/null
  fi

  if [ -n "${_OLD_VIRTUAL_PS1:-}" ]; then
    PS1="${_OLD_VIRTUAL_PS1:-}"
    export PS1
    unset _OLD_VIRTUAL_PS1
  fi

  unset VIRTUAL_ENV
  if [ ! "${1:-}" = "nondestructive" ]; then
    # Self destruct!
    unset -f exit
  fi
}

# unset irrelevant variables
exit nondestructive

# HackerMode path
if [[ "$0" =~ .+activate ]]; then
  __FILE__=$(realpath "$0")
  VIRTUAL_ENV=${__FILE__%/*/*}
  export VIRTUAL_ENV
elif [[ "$_" =~ .+bash ]]; then
  __FILE__=$(realpath "$_")
  VIRTUAL_ENV=${__FILE__%/*}
  export VIRTUAL_ENV
else
  echo "# cannot find HackerMode path!"
  exit
fi

# Add HackerMode path to virtual system path
_OLD_VIRTUAL_PATH="$PATH"
export PATH="$VIRTUAL_ENV/bin:$PATH"

# prompt setting (HackerMode cmd Style)
if [ -z "${VIRTUAL_ENV_DISABLE_PROMPT:-}" ]; then
  _OLD_VIRTUAL_PS1="${PS1:-}"
  PS1="(HackerMode) ${PS1:-}"
  export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "${BASH:-}" -o -n "${ZSH_VERSION:-}" ]; then
  hash -r 2>/dev/null
fi
